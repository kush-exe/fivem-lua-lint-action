stds.cfx = {
    globals = {
        string = { other_fields = true }
    },
    read_globals = {
        Citizen = {
            fields = {
                "Wait", "CreateThread", "SetTimeout", "Await", "Trace",
                "InvokeNative", "PointerValueInt"
            }
        },
        exports = { other_fields = true },
        GlobalState = { other_fields = true },
        "PointerValueInt",
        "Player",
        "Entity",
        "Vehicle",
        "Wait",
        "CreateThread",
        "SetTimeout",
        "Await",
        "Trace",
        "quat",
        "vec",
        "vector2", "vec2",
        "vector3", "vec3",
        "vector4", "vec4",
        "AddEventHandler",
        "RegisterNetEvent",
        "TriggerEvent",
        "RemoveEventHandler",
        json = { fields = { "encode", "decode", "array", "getoption", "isarray", "isobject", "null", "object", "setoption", "use_lpeg" } },
        promise = { fields = { "new", "all", "first", "map" } },
        table = { fields = { "create", "wipe", "clone", "type" } },
        string = { fields = { "strjoin", "strtrim", "strconcat", "strsplit", "tostringall" } },
        utf8 = { fields = { "strlenutf8", "strcmputf8i" } },
        msgpack = { fields = { "extend", "extend_clear", "extend_get", "getoption", "gettype", "new", "next", "null", "pack", "pack_args", "safe", "sentinel", "packers", "set_array", "set_integer", "set_number", "set_string", "setoption", "settype", "unpack" } },
        "scrub",
        "vector",
        "mat",
        "mat2",
        "mat3",
        "mat4",
        "mat2x2",
        "mat2x3",
        "mat2x4",
        "mat3x2",
        "mat3x3",
        "mat3x4",
        "mat4x2",
        "mat4x3",
        "mat4x4",
        "cross",
        "defer",
        "dot",
        "each",
        "inv",
        "norm",
        "slerp",
        "quat",
        "qua",
        "joaat",
        %%SHARED_GLOBALS%%
    }
}

stds.cfx_sv = {
    globals = { "GlobalState" },
    read_globals = {
        "source",
        "TriggerClientEvent",
        "TriggerLatentClientEvent",
        "RegisterServerEvent",
        "GetPlayerIdentifiers",
        "GetPlayers",
        "GetPlayerTokens",
        "PerformHttpRequest",
        "CreateVehicle",
        %%SERVER_GLOBALS%%
    }
}

stds.cfx_cl_deprecated = {
    read_globals = {
        "World3dToScreen2d"
    }
}

stds.cfx_cl = {
    read_globals = {
        LocalPlayer = {
            fields = {
                state = {
                    other_fields = true,
                    fields = {
                        "set",
                        "isLoggedIn",
                    }
                }
            }
        },
        "TriggerServerEvent",
        "TriggerLatentServerEvent",
        "RegisterNUICallback",
        "SendNUIMessage",
        "GlobalState",
        %%CLIENT_GLOBALS%%
    }
}

stds.cfx_manifest = {
    read_globals = {
        "author", "description", "repository", "version",
        "rdr3_warning", "fx_version", 
        "games", "game", "authors", "author",
        "server_scripts", "server_script",
        "client_scripts", "client_script",
        "shared_scripts", "shared_script",
        "ui_page", "files", "file",
        "export", "exports", "replace_level_meta", 
        "data_file", "this_is_a_map", "server_only",
        "loadscreen", "dependency", "dependencies",
        "provide", "lua54", "disable_lazy_natives",
        "clr_disable_task_scheduler", "my_data",
        "ui_page_preload", "loadscreen_manual_shutdown",
    },
}

stds.esx_legacy = {
    read_globals = {
        MySQL = {
            fields = {
                "ready",
                "insert",
                "update",
                "scalar",
                "single",
                "prepare",
                "query",
            }
        }
    }
}

stds.mysql = {
    read_globals = {
        MySQL = {
            fields = {
                "query",
                "update",
                "scalar",
                "single",
                "insert",
                "transaction",
                "prepare",
                "ready",
                Sync = {
                    fields = {
                        "prepare",
                        "fetchScalar",
                        "fetchSingle",
                        "fetchAll",
                        "transaction",
                        "insert",
                        "execute",
                    }
                },
                Async = {
                    fields = {
                        "prepare",
                        "fetchScalar",
                        "fetchSingle",
                        "fetchAll",
                        "transaction",
                        "insert",
                        "execute",
                    }
                }
            }
        }
    }
}

stds.polyzone = {
    read_globals = {
        "PolyZone",
        "ComboZone",
        "BoxZone",
        "EntityZone",
        "CircleZone"
    }
}

stds.qblocales = {
    read_globals = {
        Locale = {
            fields = {
                "new",
                "extend",
                "clear",
                "replace",
                "locale",
                "t",
                "has",
                "delete",
            }
        }
    }
}

stds.qbgarages = {
    read_globals = {
        "Garages"
    }
}

stds.qbapartments = {
    read_globals = {
        "Apartments"
    }
}

stds.menuv = {
    read_globals = {
        MenuV = {
            fields = {
                "CreateMenu",
                "OpenMenu",
                "CloseMenu",
                "T",
                "InheritMenu",
                "GetMenu",
                "Refresh",
                "CloseAll",
                "AddControlKey",
                "IsNamespaceAvailable"
            }
        }
    }
}

-- manifest
files["**/fxmanifest.lua"].std = "max+cfx_manifest"
files["**/__resource.lua"].std = "max+cfx_manifest"
files["**/fxmanifest.lua"].ignore = {'113', '611', '111', '614'}
files["**/__resource.lua"].ignore = {'113', '611', '111', '614'}
-- clients
files["**/client.lua"].std = "max+cfx+cfx_cl_deprecated+cfx_cl%%EXTRA%%"
files["**/cl_*.lua"].std = "max+cfx+cfx_cl_deprecated+cfx_cl%%EXTRA%%"
files["**/client/**/*.lua"].std = "max+cfx+cfx_cl_deprecated+cfx_cl%%EXTRA%%"
-- server
files["**/server.lua"].std = "max+cfx+cfx_sv%%EXTRA%%"
files["**/sv_*.lua"].std = "max+cfx+cfx_sv%%EXTRA%%"
files["**/server/**/*.lua"].std = "max+cfx+cfx_sv%%EXTRA%%"
-- shared
files["**/shared.lua"].std="max+cfx+cfx_sv+cfx_cl_deprecated+cfx_cl%%EXTRA%%"
files["**/shared/**/*.lua"].std="max+cfx+cfx_sv+cfx_cl_deprecated+cfx_cl%%EXTRA%%"
-- default
max_line_length = 1100
max_cyclomatic_complexity = 200
color = true
ignore = {
    "021", -- An invalid inline option.
    "022", -- An unpaired inline push directive.
    "023", -- An unpaired inline pop directive.
    "111", -- Setting an undefined global variable.
    "112", -- Mutating an undefined global variable.
    "113", -- Accessing an undefined global variable.
    "121", -- Setting a read-only global variable.
    "122", -- Setting a read-only field of a global variable.
    "131", -- Unused implicitly defined global variable.
    "142", -- Setting an undefined field of a global variable.
    "143", -- Accessing an undefined field of a global variable.
    "211", -- Unused local variable.
    "212", -- Unused argument.
    "213", -- Unused loop variable.
    "214", -- used variable with unused hint.
    "221", -- Local variable is accessed but never set.
    "231", -- Local variable is set but never accessed.
    "232", -- An argument is set but never accessed.
    "233", -- Loop variable is set but never accessed.
    "241", -- Local variable is mutated but never accessed.
    "311", -- Value assigned to a local variable is unused.
    "312", -- Value of an argument is unused.
    "313", -- Value of a loop variable is unused.
    "314", -- Value of a field in a table literal is unused.
    "321", -- Accessing uninitialized local variable.
    "331", -- Value assigned to a local variable is mutated but never accessed.
    "341", -- Mutating uninitialized local variable.
    "411", -- Redefining a local variable.
    "412", -- Redefining an argument.
    "413", -- Redefining a loop variable.
    "421", -- Shadowing a local variable.
    "422", -- Shadowing an argument.
    "423", -- Shadowing a loop variable.
    "431", -- Shadowing an upvalue.
    "432", -- Shadowing an upvalue argument.
    "433", -- Shadowing an upvalue loop variable.
    "511", -- Unreachable code.
    "512", -- Loop can be executed at most once.
    "521", -- Unused label.
    "531", -- Left-hand side of an assignment is too short.
    "532", -- Left-hand side of an assignment is too long.
    "542", -- Empty if block.
    "571", -- A numeric for loop goes from #(expr) down to 1 or less without negative step.
    "611", -- A line consists of nothing but whitespace.
    "612", -- A line contains trailing whitespace.
    "613", -- Trailing whitespace in a string.
    "614", -- Trailing whitespace in a comment.
    "621", -- Inconsistent indentation (SPACE followed by TAB).
    "631", -- Line is too long.
}
std = "max+cfx+cfx_sv+cfx_cl_deprecated+cfx_cl%%EXTRA%%"
